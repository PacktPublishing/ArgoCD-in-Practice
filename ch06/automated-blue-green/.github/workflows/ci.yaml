name: CI/CD
on:
  push:
    branches:
      - main
  pull_request:
    branches: [ '*' ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Lint
        run: make lint

  build:
    name: Build & Push
    runs-on: ubuntu-latest
    needs: ["lint"]
    steps: 
    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract branch name
      id: extract_branch
      uses: tj-actions/branch-names@v5

    - name: Sanitize branch name
      id: branch
      run: |
        CURRENT_BRANCH=${{ steps.extract_branch.outputs.current_branch }}
        CURRENT_BRANCH_SANITIZED=$(echo $CURRENT_BRANCH | sed 's/[^a-zA-Z0-9]/-/g')
        echo "::set-output name=current_branch::${CURRENT_BRANCH_SANITIZED}"

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build
      run: |
        TAG=${{ steps.branch.outputs.current_branch }} make push-image

  deploy-argo:
    name: Create Argo App
    runs-on: ubuntu-latest
    needs: ["build"]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download Argo CD CLI
      run: |
        make download-argo-cli

    - name: Deploy Argo app
      run: |
        make create-argo-app
      env:
        PROJ: team
        APP: blue-green
        JWT: ${{ secrets.ARGOCD_TOKEN }}
        ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
        ARGOCD_PATH: "deployments/argo"
